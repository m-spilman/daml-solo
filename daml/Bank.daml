module Bank where

import Daml.Script

template BankAccount 
    with
     owner: Party
     admin: Party
     balance: Decimal
    where
     signatory owner
     observer admin
     key owner : Party
     maintainer key
     controller owner can

      Deposit: ContractId BankAccount
        with deposit: Decimal
        do
         create this with 
            balance = balance + deposit

      TransferToAccount: ContractId TransferFunds
        with
            receiver: Party 
            transferAmount: Decimal
            receivingAccount: ContractId BankAccount
        do
          assert(transferAmount <= balance)
          create this with 
            balance = balance - transferAmount
          create TransferFunds
           with
            receiver 
            sender = owner
            amount = transferAmount
            receivingAccount 
        
template PaymentRequest
    with
     requestor: Party
     debtor: Party
     payee: Party
     payeeAccount: ContractId BankAccount
     amount: Decimal
    where
     signatory requestor
     controller debtor can
      MakePayment: ContractId TransferFunds
       with
        account: ContractId BankAccount
       do
         exercise account TransferToAccount with
          receiver = payee
          transferAmount = amount
          receivingAccount = payeeAccount  
template TransferFunds
    with
     receiver: Party
     sender: Party
     amount: Decimal
     receivingAccount: ContractId BankAccount
    where
     signatory sender
     controller receiver can
      
      Accept: ContractId BankAccount
        do
        assert(amount > 0.00)
        exercise receivingAccount Deposit 
            with
                deposit = amount




test : Script ()
test = do

return ()

     
     